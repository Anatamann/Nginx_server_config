# Load balancing upstream configuration
upstream backend {
    least_conn;
    server 10.0.0.1:80;
    server 10.0.0.2:80;
    keepalive 32;
}

# HTTP to HTTPS redirect
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    
    # Security headers for even redirected responses
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Permanent redirect to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server with load balancing
server {
    listen 443 ssl http2;
    server_name example.com www.example.com;
    
    # SSL configuration
    ssl_certificate /etc/ssl/certs/example.com.crt;
    ssl_certificate_key /etc/ssl/private/example.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Proxy configuration
    location / {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Forwarding headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout configurations
        proxy_connect_timeout 60s;
        proxy_read_timeout 7200s;
        proxy_send_timeout 7200s;
    }
    
    # SSL session cache optimization
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
}
